/*File:		Sound Xtra Shell.hCopyright © 1994, 1995 Macromedia, Inc.  All Rights ReservedYou may utilize this source file to create and compile object code for use within products you may create.  THIS CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, AND MACROMEDIA DISCLAIMS ALL IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT WILL MACROMEDIA BE LIABLE TO YOU FOR ANY CONSEQUENTIAL, INDIRECT OR INCIDENTAL DAMAGES ARISING OUT OF YOUR USE OR INABILITY TO USE THIS CODE.*/#ifndef __SEXTRASHELLH__#define __SEXTRASHELLH__#ifndef __MOASOUNDEDITTYPES__#include "MOASoundEditTypes.h"#endif#ifndef __MOASOUNDEDITMODULEINTERFACE__#include "MOASoundEditModuleInterface.h"#endif#ifndef _H_moastdif#include "moastdif.h"#endif#define kModuleStrings	128// =====================================================================// This is stuff you change to create a new sound Xtra from this shell.// Change the numbers here to a unique COM class ID.DEFINE_GUID( CLSID_SndXtraShell, 0x93e13de2, 0x1856, 0x11cf, 0xa6, 0xf4, 0x00, 0xaa, 0x00, 0xa8, 0x56, 0x23);// Change the module type to one of the following:// 		kMoaSEEffect//		kMoaSEGenerator//		kMoaSEGeneral//		kMoaSEImporter//		kMoaSEExporter#define MY_MODULE_TYPE kMoaSEImporter// Change this to the minimum number of sound samples the Xtra requires to be selected// to be enabled in the menu.  Importers, Exporter and Generators will probably set this// to 0.#define MIN_SELECTION_TO_ENABLE 1#pragma push#ifndef powerc#pragma pointers_in_D0#endif// TYPE DEFINITIONStypedef long				LONG;typedef unsigned int		UINT;typedef unsigned char		BYTE;typedef unsigned short		WORD;typedef unsigned long		DWORD;typedef Boolean				BOOL;#define FlipShort(x) \		( ((((WORD)(x))<<8)&0xFF00) | ((((WORD)(x))>>8)&0x00FF) )	#define FlipLong(x) \		( ((((DWORD)(x))<<24)&0xFF000000) | ((((DWORD)(x))<<8)&0x00FF0000)	| ((((DWORD)(x))>>8)&0x0000FF00) | ((((DWORD)(x))>>24)&0x000000FF) )	#define LOWORD(x) \		((WORD)((x) & 0x0000FFFF))#define HIWORD(x) \		((WORD)(((x)>>16) & 0x0000FFFF))		#define MAKELONG(x,y) \		( ((DWORD)((WORD)(x))) | ((DWORD)((WORD)(y)))<<16 )#define min(x, y) \		((x)>(y) ? (y) : (x))#define WAVE_FORMAT_IMA_ADPCM	0x0011 // Look for this in wFormatTag // IMAADPCMWAVEFORMAT is a WAVEFORMATEX structure with wSamplesPerBlock at the end.typedef struct ima_adpcmwaveformat_tag{	WORD		wFormatTag;	WORD		nChannels;	DWORD		nSamplesPerSec;	DWORD		nAvgBytesPerSec;	WORD		nBlockAlign;	WORD		wBitsPerSample;	WORD		cbSize;	WORD		wSamplesPerBlock;} IMAADPCMWAVEFORMAT, *PIMAADPCMWAVEFORMAT, FAR *LPIMAADPCMWAVEFORMAT;typedef struct {	long	ckID;	long	ckDataSize;}	RIFFChunkHead;		// ChunkHead is followed by ckDataSize bytes (padded) of data#define IMAADPCM_HEADER_LENGTH      4    // In bytes, per channel.// Decode routinesDWORD DecodeMono8(BYTE* src, DWORD srcLength, BYTE* dst, UINT blockAlign);DWORD DecodeMono16(BYTE* src, DWORD srcLength, BYTE* dst, UINT blockAlign);DWORD DecodeStereo8(BYTE* src, DWORD srcLength, BYTE* dstLeft, BYTE* dstRight, UINT blockAlign);DWORD DecodeStereo16(BYTE* src, DWORD srcLength, BYTE* dstLeft, BYTE* dstRight, UINT blockAlign);// Add items to this structure as you need it.  DO NOT USE GLOBAL VARIABLES !EXTERN_BEGIN_DEFINE_CLASS_INSTANCE_VARS( SndXtraShell )	lpIMoaSEService 		pMoaSEService;		// The callback interface for SoundEdit routines	PIMoaProgressBox		pMoaProgressBox;	// Progress box interface	BYTE FAR *				inPtr;				// Pointer to our input buffer.	BYTE FAR *				out1Ptr;			// Pointer to our mono or stereo left output buffer.	BYTE FAR *				out2Ptr;			// Pointer stereo right output buffer (if needed)	IMAADPCMWAVEFORMAT		format;				// Format of the file we are readingEXTERN_END_DEFINE_CLASS_INSTANCE_VARS// =====================================================================// Don't change this stuff:EXTERN_BEGIN_DEFINE_CLASS_INTERFACE( SndXtraShell, IMoaSEExtension )	EXTERN_DEFINE_METHOD( MoaError, DoIt, (THIS_ pMoaSEDocInfo pDocInfo, FSSpec theFile) )	EXTERN_DEFINE_METHOD( MoaBoolParam, DoFileFilter, (THIS_ pMoaSEDocInfo pDocInfo, CInfoPBPtr pb) )EXTERN_END_DEFINE_CLASS_INTERFACEEXTERN_BEGIN_DEFINE_CLASS_INTERFACE( SndXtraShell, IMoaRegister )	EXTERN_DEFINE_METHOD( MoaError, Register, (THIS_ PIMoaCache pCache, PIMoaXtraEntryDict pXtraDict) )EXTERN_END_DEFINE_CLASS_INTERFACE#pragma pop#endif