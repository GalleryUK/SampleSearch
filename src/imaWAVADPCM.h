OSErr playIMAWAV (FSSpec mySpec);OSErr DoImport(Ptr inPtr, Ptr out1Ptr, Ptr  out2Ptr, short fileRef, long numBytes, short firstTrack, short channels, long nBlockAlign);long SeekToChunk(short fileRef, long tag);Boolean ReadWaveHeader(short fileRef);short SampleDecode(short encodedSample, short predictedSample, short stepSize);short NextStepIndex(short encodedSample, short stepIndex);Boolean ValidStepIndex(short stepIndex);unsigned long DecodeMono16(Byte* src, unsigned long srcLength, Byte* dst, unsigned short blockAlign);unsigned long DecodeStereo16(Byte* src, unsigned long srcLength, Byte* dstLeft, Byte* dstRight, unsigned short blockAlign);OSErr allocateMemoryIMA(void);OSErr deAllocateMemory(void);// IMAADPCMWAVEFORMAT is a WAVEFORMATEX structure with wSamplesPerBlock at the end.typedef struct ima_adpcmwaveformat_tag{	unsigned short		wFormatTag;	unsigned short		nChannels;	unsigned long		nSamplesPerSec;	unsigned long		nAvgBytesPerSec;	unsigned short		nBlockAlign;	unsigned short		wBitsPerSample;	unsigned short		cbSize;	unsigned short		wSamplesPerBlock;} IMAADPCMWAVEFORMAT;typedef struct {	long	ckID;	long	ckDataSize;}	RIFFChunkHead;		/* ChunkHead is followed by ckDataSize bytes -padded- of data  */void playIMAWAVMany(void);void IMAWAV2SDIIMany(void);OSErr IMAWAV2SDII (FSSpec mySpec);void interleave16BitBuffers (Ptr leftBuffer, Ptr rightBuffer, Ptr stereoBuffer,long inOutCount);OSErr WriteWaveHeaderInfo(void);OSErr		WriteWaveData(long * totalBytesWritten, long * totalSamplesWritten);OSErr		FillInPlaceholders(long RIFFLen, long factLen, long dataLen);unsigned long EncodeMono(Byte * src, unsigned long cbSrcLength, Byte* dst, unsigned short samplesPerBlock, short* savedStepIndex);unsigned long EncodeStereo(Byte* srcLeft, Byte* srcRight, unsigned long cbSrcLength, Byte* dst, unsigned short samplesPerBlock, short* savedStepIndexL, short* savedStepIndexR);void deInterleaveAudio (Ptr sourcePtr,Ptr secondChannel, long dataLength,short wordSize);OSErr allocateMemoryCompressIMA(void);OSErr deAllocateCompressMemory(void);void SDII2IMAWAVMany(void);OSErr SDII2IMAWAV (FSSpec mySpec);