extern ListHandle myListq;Boolean writeSDIIResources(FSSpec theSpec,long theRate,Boolean stereo,short theWordSize);extern long theAPPLReply;void setConvertDest(void);void writeLog(Ptr theLogTextPtr);short defragFile(FSSpec theSpec);#define kDeFragComplete 0#define kDeFragWithDiscon 1				#define kDeFragImpossible 2extern Boolean problemOccurred;void writeLogS(Str255 theLogText);long findCOMM(short localRefNum, OSType);Boolean SDIItoSND(FSSpec theSpec, short resourceID);Boolean PCRAWToSDII(FSSpec theSpec,Boolean Stereo,short theNumberOfBits,long theRate, Boolean intelFormat, long theHeaderSize);static void ConvertSound(Ptr sndPtr, long datasize);//Str255 theRenameStr;Boolean ChangeFInfo(FSSpec theSpec, OSType theType, OSType theCreator);Boolean SDII16to8(FSSpec theSpec);Boolean SDIIAddSilenceEnd(FSSpec sourceSpec);Boolean writeSDIILoopsMarkers(FSSpec theSpec);Boolean SDIIAddSilenceStart(FSSpec sourceSpec);Boolean SDIIMonoToStereoLR(FSSpec theSpec);Boolean SDIIMonoToStereoSplit(FSSpec theSpec);Boolean GetFSComment(FSSpec mySpec, Str255 theComment);Boolean SetFSComment (FSSpec mySpec, StringPtr theComment);#include <QuickTimeComponents.h>#define kExportMenu 155#define kMyCustomSaveDialog 2121pascal Boolean myExportFileFilter(ParmBlkPtr PB);pascal short xmyDlgHook(short item, DialogPtr theDialog, short *whichConverter);extern long theTXFERLong;Boolean pcConv8(Ptr theBuff,long inOutCount);Boolean PCWriteI(short destRef,short theBytes);Boolean PCWriteL(short destRef,long theBytes);unsigned long swapBytesL(unsigned long);unsigned short swapBytesI(unsigned short theInt);Boolean addFileToList(FSSpec mySpec);Boolean SDIItoPCRaw(FSSpec sourceSpec);Boolean pcConv(Ptr theBuff,long inOutCount);Boolean GetSampleRateTime (FSSpec mySpec, short index, long theSize, long* theSRate, long* theDuration, Boolean* isStereo, OSType theFileType);Boolean getSDIIData (FSSpec mySpec, long* theRate, short* theWordSize, Boolean* stereo, long* theBytes);Boolean SDIItoWAV(FSSpec sourceSpec, Boolean writeName);Boolean SDIItoPCSampleVision(FSSpec sourceSpec);Boolean QuickTimetoAIFF(FSSpec theSpec);Boolean AIFFtoQuickTime(FSSpec theSpec);Boolean SDIItoAIFF(FSSpec theSpec);Boolean importMovie(FSSpec mySpec);Boolean RecoverSDII(FSSpec theSpec, short numBits, short channels, Str255 srate);Boolean writeSDIIResources(FSSpec theSpec,long theRate,Boolean stereo,short theWordSize);short GetWAVInfo (FSSpec mySpec,long  *theSRate, short *theWordSize,long *theDuration, Boolean *isStereo, long *length);Boolean WAVToSDII(FSSpec mySpec);Boolean AIFFToSDII(FSSpec mySpec);Boolean ConvertMany(void);Boolean WAVtoSDIIMany(void);void SDIItoWavMany(void);Boolean SDII16To24(FSSpec theSpec);OSErr SDII16To24Many(void);Boolean pcConv24(Ptr theBuff, long inOutCount);OSErr data24to16(Ptr theBuff, long * inOutCount);void SDIItoPCRawMany(void);Boolean RemoveNameChars(FSSpec theSpec, Str255 theText);void RemoveNameCharsMany(void);void SDIIStereoToMonoMany(void);OSErr QuickTimetoAIFFMany(void);Boolean deFragMany(void);Boolean AIFFtoQuickTimeMany(void);OSErr SDIItoAIFFMany(void);void SDII16to8Many(void);void SDIIMonoToStereoMany(void);void SDIITrimEndMany(void);void GeffenToSDIIMany(void);void PCRAWToSDIIMany(void);void ChangeFInfoMany(void);void SDIItoSNDMany(void);